{"version":3,"file":"static/js/831.bd96c994.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","redux/selectors.js","Pages/ContactsPage/ContactsPage.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","Pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 500;\n  font-size: 18px;\n  margin-bottom: 12px;\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  outline: none;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  &:focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #bdbdbd;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const DeleteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  border: none;\n  min-width: 120px;\n  padding: 8px 15px;\n  border-radius: 4px;\n  width: 120px;\n  cursor: pointer;\n  transition: all 500ms ease;\n  :hover {\n    background: rgba(0, 0, 0, 0);\n    color: #3a7999;\n    box-shadow: inset 0 0 0 3px #3a7999;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DeleteBtn } from './Button.styled';\n\nfunction Button({ children, onClick }) {\n  return <DeleteBtn onClick={onClick}>{children}</DeleteBtn>;\n}\n\nButton.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import { useState } from 'react';\nimport { Form, FormLabel, FormInput } from './ContactForm.styled';\nimport Button from '../Button';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  return (\n    <Form onSubmit={handleAddContact}>\n      <FormLabel>\n        Name\n        <FormInput\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n          placeholder=\"Enter contact name\"\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          autoComplete=\"off\"\n          placeholder=\"111-111-1111\"\n        />\n      </FormLabel>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul``;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const ListText = styled.p`\n  font-size: 18px;\n  margin-right: auto;\n`;\n","export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter.text;\n","import styled from '@emotion/styled';\n\nexport const Phonebook = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-width: 400px;\n  color: #010101;\n  padding: 20px;\n  border-radius: 10px;\n  background-color: #77c4ff63;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\n\nexport const MainTitle = styled.h1`\n  font-size: 40px;\n  margin-bottom: 20px;\n  color: #47525ded;\n`;\n\nexport const ContactTitle = styled.h2`\n  margin-right: auto;\n  font-size: 30px;\n  margin-bottom: 10px;\n  color: #47525ded;\n`;\n\nexport const TotalContactText = styled.p`\n  margin-right: auto;\n  font-weight: 500;\n  font-size: 20px;\n  margin-bottom: 8px;\n`;\n","import Button from '../Button';\nimport { List, ListItem, ListText } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { TotalContactText } from '../../Pages/ContactsPage/ContactsPage.styled';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const { contacts, isLoading, error } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <List>\n      {isLoading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"36\"\n          visible={true}\n        />\n      )}\n      {error && <p>{error}</p>}\n      {contacts.length > 0 && (\n        <TotalContactText>Total contacts: {contacts.length}</TotalContactText>\n      )}\n      {contacts.length > 0 &&\n        filteredContacts.map(({ id, name, number }) => (\n          <ListItem key={id}>\n            <ListText>\n              {name}: {number}\n            </ListText>\n            <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </Button>\n          </ListItem>\n        ))}\n    </List>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 500;\n  font-size: 18px;\n  margin-bottom: 12px;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  outline: none;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  &:focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #bdbdbd;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n  }\n`;\n","import { FilterLabel, FilterInput } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from '../../redux/filter/filter-slice';\nimport { selectFilter } from '../../redux/selectors';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    dispatch(updateFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name:\n      <FilterInput type=\"text\" value={filter} onChange={changeFilter} />\n    </FilterLabel>\n  );\n}\n","import React from 'react';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport Filter from '../../components/Filter/Filter';\nimport { Phonebook, MainTitle, ContactTitle } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const { contacts } = useSelector(selectContacts);\n  return (\n    <Phonebook>\n      <MainTitle>Phonebook</MainTitle>\n      <ContactForm />\n      <ContactTitle>Contacts</ContactTitle>\n      {contacts.length > 0 && <Filter />}\n      <ContactList />\n    </Phonebook>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","FormLabel","FormInput","DeleteBtn","children","onClick","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","e","currentTarget","value","onSubmit","preventDefault","addContact","onChange","type","pattern","title","required","autoComplete","placeholder","List","ListItem","ListText","selectContacts","state","contacts","selectFilter","filter","text","Phonebook","MainTitle","ContactTitle","TotalContactText","ContactList","useSelector","isLoading","error","useEffect","fetchContacts","filteredContacts","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","strokeColor","strokeWidth","animationDuration","width","visible","length","map","id","deleteContact","FilterLabel","FilterInput","Filter","updateFilter"],"sourceRoot":""}